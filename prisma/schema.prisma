datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  name     String?
  password String?
  provider Provider
  forms    Form[]   @relation("user")
}

model Form {
  id         String   @id @default(cuid())
  name       String?
  published  Boolean  @default(false)
  theme      String?
  fontFamily String?
  screens    Screen[]
  userId     String?
  user       User?    @relation(fields: [userId], references: [id], name: "user", onDelete: Cascade)

  formResponses FormResponse[]
}

model FormResponse {
  id           String   @id @default(cuid())
  form         Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId       String
  submittedAt  DateTime @default(now())
  responseData Json
}

model Screen {
  id          String     @id @default(cuid())
  type        ScreenType
  title       String
  description String?
  buttonText  String?
  order       Int?
  required    Boolean    @default(false)
  form        Form       @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId      String
  options     Option[]
}

model Option {
  id       String  @id @default(cuid())
  label    String
  value    String
  imageUrl String?
  screen   Screen  @relation(fields: [screenId], references: [id], onDelete: Cascade)
  screenId String
}

enum ScreenType {
  welcomeScreen
  short_text
  long_text
  multiple_choice
  dropdown
  date
  rating
  boolean
  email
  website
  file_upload
  number
  opinion_scale
  picture_choice
  endScreen
}

enum Provider {
  Google
  Credentials
}
